From a666ee5be15510d56635ad412e673a98b96d0f40 Mon Sep 17 00:00:00 2001
From: Devin AI <158243242+devin-ai-integration[bot]@users.noreply.github.com>
Date: Fri, 20 Dec 2024 17:12:58 +0000
Subject: [PATCH] Add 3D player implementation with mobile controls

- Add PlayerController for 3D movement
- Add PlayerNetworkSync for multiplayer
- Add MobileJoystick for touch controls
- Create player and UI prefabs
- Update NetworkManager for 3D player spawning

Co-Authored-By: zxzt zbpk <fett0g84@erl.togetherl.run>
---
 Assets/Prefabs/Player/PlayerPrefab.prefab  | 160 +++++++++++++++++
 Assets/Prefabs/UI/MobileControls.prefab    | 194 +++++++++++++++++++++
 Assets/Scripts/Network/NetworkManager.cs   |  13 +-
 Assets/Scripts/Player/PlayerController.cs  |  76 ++++++++
 Assets/Scripts/Player/PlayerNetworkSync.cs |  61 +++++++
 Assets/Scripts/UI/MobileJoystick.cs        |  61 +++++++
 6 files changed, 564 insertions(+), 1 deletion(-)
 create mode 100644 Assets/Prefabs/Player/PlayerPrefab.prefab
 create mode 100644 Assets/Prefabs/UI/MobileControls.prefab
 create mode 100644 Assets/Scripts/Player/PlayerController.cs
 create mode 100644 Assets/Scripts/Player/PlayerNetworkSync.cs
 create mode 100644 Assets/Scripts/UI/MobileJoystick.cs

diff --git a/Assets/Prefabs/Player/PlayerPrefab.prefab b/Assets/Prefabs/Player/PlayerPrefab.prefab
new file mode 100644
index 0000000..1d76ec6
--- /dev/null
+++ b/Assets/Prefabs/Player/PlayerPrefab.prefab
@@ -0,0 +1,160 @@
+%YAML 1.1
+%TAG !u! tag:unity3d.com,2011:
+--- !u!1 &1000000000
+GameObject:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  serializedVersion: 6
+  m_Component:
+  - component: {fileID: 2000000000}
+  - component: {fileID: 3000000000}
+  - component: {fileID: 4000000000}
+  - component: {fileID: 5000000000}
+  - component: {fileID: 6000000000}
+  - component: {fileID: 7000000000}
+  - component: {fileID: 8000000000}
+  m_Layer: 0
+  m_Name: PlayerPrefab
+  m_TagString: Player
+  m_Icon: {fileID: 0}
+  m_NavMeshLayer: 0
+  m_StaticEditorFlags: 0
+  m_IsActive: 1
+--- !u!4 &2000000000
+Transform:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
+  m_LocalPosition: {x: 0, y: 1, z: 0}
+  m_LocalScale: {x: 1, y: 1, z: 1}
+  m_Children: []
+  m_Father: {fileID: 0}
+  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
+--- !u!33 &3000000000
+MeshFilter:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_Mesh: {fileID: 10208, guid: 0000000000000000e000000000000000, type: 0}
+--- !u!23 &4000000000
+MeshRenderer:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_Enabled: 1
+  m_CastShadows: 1
+  m_ReceiveShadows: 1
+  m_DynamicOccludee: 1
+  m_StaticShadowCaster: 0
+  m_MotionVectors: 1
+  m_LightProbeUsage: 1
+  m_ReflectionProbeUsage: 1
+  m_RayTracingMode: 2
+  m_RenderingLayerMask: 1
+  m_Materials:
+  - {fileID: 10303, guid: 0000000000000000f000000000000000, type: 0}
+  m_StaticBatchInfo:
+    firstSubMesh: 0
+    subMeshCount: 0
+  m_StaticBatchRoot: {fileID: 0}
+  m_ProbeAnchor: {fileID: 0}
+  m_LightProbeVolumeOverride: {fileID: 0}
+  m_ScaleInLightmap: 1
+  m_ReceiveGI: 1
+  m_PreserveUVs: 0
+  m_IgnoreNormalsForChartDetection: 0
+  m_ImportantGI: 0
+  m_StitchLightmapSeams: 1
+  m_SelectedEditorRenderState: 3
+  m_MinimumChartSize: 4
+  m_AutoUVMaxDistance: 0.5
+  m_AutoUVMaxAngle: 89
+  m_LightmapParameters: {fileID: 0}
+  m_SortingLayerID: 0
+  m_SortingLayer: 0
+  m_SortingOrder: 0
+--- !u!136 &5000000000
+CapsuleCollider:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_Material: {fileID: 0}
+  m_IsTrigger: 0
+  m_Enabled: 1
+  m_Radius: 0.5
+  m_Height: 2
+  m_Direction: 1
+  m_Center: {x: 0, y: 0, z: 0}
+--- !u!54 &6000000000
+Rigidbody:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  serializedVersion: 2
+  m_Mass: 1
+  m_Drag: 0
+  m_AngularDrag: 0.05
+  m_UseGravity: 1
+  m_IsKinematic: 0
+  m_Interpolate: 1
+  m_Constraints: 112
+  m_CollisionDetection: 0
+--- !u!114 &7000000000
+MonoBehaviour:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_Enabled: 1
+  m_EditorHideFlags: 0
+  m_Script: {fileID: 11500000, guid: aa584fbee541324448dd18d8409c7a41, type: 3}
+  m_Name:
+  m_EditorClassIdentifier:
+  ObservedComponents:
+  - {fileID: 8000000000}
+  - {fileID: 7000000001}
+  SceneViewId: 0
+  InstantiationId: 0
+  isRuntimeInstantiated: 0
+--- !u!114 &7000000001
+MonoBehaviour:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_Enabled: 1
+  m_EditorHideFlags: 0
+  m_Script: {fileID: 11500000, guid: PlayerController, type: 3}
+  m_Name:
+  m_EditorClassIdentifier:
+  moveSpeed: 5
+  rotationSpeed: 10
+--- !u!114 &8000000000
+MonoBehaviour:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_Enabled: 1
+  m_EditorHideFlags: 0
+  m_Script: {fileID: 11500000, guid: PlayerNetworkSync, type: 3}
+  m_Name:
+  m_EditorClassIdentifier:
+  networkSmoothTime: 0.1
+  networkPositionThreshold: 0.5
diff --git a/Assets/Prefabs/UI/MobileControls.prefab b/Assets/Prefabs/UI/MobileControls.prefab
new file mode 100644
index 0000000..261d49c
--- /dev/null
+++ b/Assets/Prefabs/UI/MobileControls.prefab
@@ -0,0 +1,194 @@
+%YAML 1.1
+%TAG !u! tag:unity3d.com,2011:
+--- !u!1 &1000000000
+GameObject:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  serializedVersion: 6
+  m_Component:
+  - component: {fileID: 2000000000}
+  - component: {fileID: 3000000000}
+  m_Layer: 5
+  m_Name: MobileControls
+  m_TagString: Untagged
+  m_Icon: {fileID: 0}
+  m_NavMeshLayer: 0
+  m_StaticEditorFlags: 0
+  m_IsActive: 1
+--- !u!224 &2000000000
+RectTransform:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
+  m_LocalPosition: {x: 0, y: 0, z: 0}
+  m_LocalScale: {x: 1, y: 1, z: 1}
+  m_Children:
+  - {fileID: 2000000001}
+  m_Father: {fileID: 0}
+  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
+  m_AnchorMin: {x: 0, y: 0}
+  m_AnchorMax: {x: 1, y: 1}
+  m_AnchoredPosition: {x: 0, y: 0}
+  m_SizeDelta: {x: 0, y: 0}
+  m_Pivot: {x: 0.5, y: 0.5}
+--- !u!114 &3000000000
+MonoBehaviour:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000000}
+  m_Enabled: 1
+  m_EditorHideFlags: 0
+  m_Script: {fileID: 11500000, guid: MobileJoystick, type: 3}
+  m_Name:
+  m_EditorClassIdentifier:
+  joystickBackground: {fileID: 2000000001}
+  joystickHandle: {fileID: 2000000002}
+  dragRadius: 50
+--- !u!1 &1000000001
+GameObject:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  serializedVersion: 6
+  m_Component:
+  - component: {fileID: 2000000001}
+  - component: {fileID: 3000000001}
+  - component: {fileID: 4000000001}
+  m_Layer: 5
+  m_Name: JoystickBackground
+  m_TagString: Untagged
+  m_Icon: {fileID: 0}
+  m_NavMeshLayer: 0
+  m_StaticEditorFlags: 0
+  m_IsActive: 1
+--- !u!224 &2000000001
+RectTransform:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000001}
+  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
+  m_LocalPosition: {x: 0, y: 0, z: 0}
+  m_LocalScale: {x: 1, y: 1, z: 1}
+  m_Children:
+  - {fileID: 2000000002}
+  m_Father: {fileID: 2000000000}
+  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
+  m_AnchorMin: {x: 0, y: 0}
+  m_AnchorMax: {x: 0, y: 0}
+  m_AnchoredPosition: {x: 150, y: 150}
+  m_SizeDelta: {x: 100, y: 100}
+  m_Pivot: {x: 0.5, y: 0.5}
+--- !u!222 &3000000001
+CanvasRenderer:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000001}
+--- !u!114 &4000000001
+MonoBehaviour:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000001}
+  m_Enabled: 1
+  m_EditorHideFlags: 0
+  m_Script: {fileID: 11500000, guid: fe87c0e1cc204ed48ad3b37840f39efc, type: 3}
+  m_Name:
+  m_EditorClassIdentifier:
+  m_Material: {fileID: 0}
+  m_Color: {r: 0.5, g: 0.5, b: 0.5, a: 0.5}
+  m_RaycastTarget: 1
+  m_Maskable: 1
+  m_OnCullStateChanged:
+    m_PersistentCalls:
+      m_Calls: []
+  m_Sprite: {fileID: 10913, guid: 0000000000000000f000000000000000, type: 0}
+  m_Type: 0
+  m_PreserveAspect: 0
+  m_FillCenter: 1
+  m_FillMethod: 4
+  m_FillAmount: 1
+  m_FillClockwise: 1
+  m_FillOrigin: 0
+--- !u!1 &1000000002
+GameObject:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  serializedVersion: 6
+  m_Component:
+  - component: {fileID: 2000000002}
+  - component: {fileID: 3000000002}
+  - component: {fileID: 4000000002}
+  m_Layer: 5
+  m_Name: JoystickHandle
+  m_TagString: Untagged
+  m_Icon: {fileID: 0}
+  m_NavMeshLayer: 0
+  m_StaticEditorFlags: 0
+  m_IsActive: 1
+--- !u!224 &2000000002
+RectTransform:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000002}
+  m_LocalRotation: {x: 0, y: 0, z: 0, w: 1}
+  m_LocalPosition: {x: 0, y: 0, z: 0}
+  m_LocalScale: {x: 1, y: 1, z: 1}
+  m_Children: []
+  m_Father: {fileID: 2000000001}
+  m_LocalEulerAnglesHint: {x: 0, y: 0, z: 0}
+  m_AnchorMin: {x: 0.5, y: 0.5}
+  m_AnchorMax: {x: 0.5, y: 0.5}
+  m_AnchoredPosition: {x: 0, y: 0}
+  m_SizeDelta: {x: 50, y: 50}
+  m_Pivot: {x: 0.5, y: 0.5}
+--- !u!222 &3000000002
+CanvasRenderer:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000002}
+--- !u!114 &4000000002
+MonoBehaviour:
+  m_ObjectHideFlags: 0
+  m_CorrespondingSourceObject: {fileID: 0}
+  m_PrefabInstance: {fileID: 0}
+  m_PrefabAsset: {fileID: 0}
+  m_GameObject: {fileID: 1000000002}
+  m_Enabled: 1
+  m_EditorHideFlags: 0
+  m_Script: {fileID: 11500000, guid: fe87c0e1cc204ed48ad3b37840f39efc, type: 3}
+  m_Name:
+  m_EditorClassIdentifier:
+  m_Material: {fileID: 0}
+  m_Color: {r: 1, g: 1, b: 1, a: 0.8}
+  m_RaycastTarget: 1
+  m_Maskable: 1
+  m_OnCullStateChanged:
+    m_PersistentCalls:
+      m_Calls: []
+  m_Sprite: {fileID: 10913, guid: 0000000000000000f000000000000000, type: 0}
+  m_Type: 0
+  m_PreserveAspect: 0
+  m_FillCenter: 1
+  m_FillMethod: 4
+  m_FillAmount: 1
+  m_FillClockwise: 1
+  m_FillOrigin: 0
diff --git a/Assets/Scripts/Network/NetworkManager.cs b/Assets/Scripts/Network/NetworkManager.cs
index 4427bc5..fedaf1d 100644
--- a/Assets/Scripts/Network/NetworkManager.cs
+++ b/Assets/Scripts/Network/NetworkManager.cs
@@ -1,4 +1,3 @@
-
 using UnityEngine;
 using Photon.Pun;
 using Photon.Realtime;
@@ -6,6 +5,7 @@ using Photon.Realtime;
 public class NetworkManager : MonoBehaviourPunCallbacks
 {
     public static NetworkManager Instance { get; private set; }
+    [SerializeField] private GameObject playerPrefab;
     private const string PHOTON_APP_ID = "19925bab-94bb-4b4d-9e64-ae8411854f9c";
 
     private void Awake()
@@ -38,4 +38,15 @@ public class NetworkManager : MonoBehaviourPunCallbacks
         Debug.Log("已连接到Photon服务器！");
         PhotonNetwork.JoinLobby();
     }
+
+    public override void OnJoinedRoom()
+    {
+        Debug.Log("已加入房间，正在生成玩家...");
+        Vector3 randomPosition = new Vector3(
+            Random.Range(-5f, 5f),
+            1f,
+            Random.Range(-5f, 5f)
+        );
+        PhotonNetwork.Instantiate(playerPrefab.name, randomPosition, Quaternion.identity);
+    }
 }    
\ No newline at end of file
diff --git a/Assets/Scripts/Player/PlayerController.cs b/Assets/Scripts/Player/PlayerController.cs
new file mode 100644
index 0000000..f13ae40
--- /dev/null
+++ b/Assets/Scripts/Player/PlayerController.cs
@@ -0,0 +1,76 @@
+using UnityEngine;
+using Photon.Pun;
+
+public class PlayerController : MonoBehaviourPunCallbacks
+{
+    [SerializeField] private float moveSpeed = 5f;
+    [SerializeField] private float rotationSpeed = 10f;
+
+    private Vector3 moveInput;
+    private Rigidbody rb;
+    private PhotonView photonView;
+    private Transform cameraTransform;
+
+    private void Awake()
+    {
+        rb = GetComponent<Rigidbody>();
+        photonView = GetComponent<PhotonView>();
+
+        rb.constraints = RigidbodyConstraints.FreezeRotation;
+        rb.useGravity = true;
+
+        cameraTransform = Camera.main.transform;
+    }
+
+    private void Update()
+    {
+        if (!photonView.IsMine) return;
+        HandleInput();
+    }
+
+    private void FixedUpdate()
+    {
+        if (!photonView.IsMine) return;
+        Move();
+        Rotate();
+    }
+
+    private void HandleInput()
+    {
+        moveInput = new Vector3(Input.GetAxisRaw("Horizontal"), 0f, Input.GetAxisRaw("Vertical")).normalized;
+    }
+
+    private void Move()
+    {
+        if (moveInput.magnitude <= 0.1f)
+        {
+            rb.velocity = new Vector3(0f, rb.velocity.y, 0f);
+            return;
+        }
+
+        Vector3 cameraForward = Vector3.ProjectOnPlane(cameraTransform.forward, Vector3.up).normalized;
+        Vector3 cameraRight = Vector3.Cross(Vector3.up, cameraForward);
+
+        Vector3 moveDirection = (cameraForward * moveInput.z + cameraRight * moveInput.x).normalized;
+        Vector3 movement = moveDirection * moveSpeed;
+
+        rb.velocity = new Vector3(movement.x, rb.velocity.y, movement.z);
+    }
+
+    private void Rotate()
+    {
+        if (moveInput.magnitude <= 0.1f) return;
+
+        Vector3 cameraForward = Vector3.ProjectOnPlane(cameraTransform.forward, Vector3.up).normalized;
+        Vector3 cameraRight = Vector3.Cross(Vector3.up, cameraForward);
+        Vector3 moveDirection = (cameraForward * moveInput.z + cameraRight * moveInput.x).normalized;
+
+        Quaternion targetRotation = Quaternion.LookRotation(moveDirection);
+        transform.rotation = Quaternion.Slerp(transform.rotation, targetRotation, rotationSpeed * Time.fixedDeltaTime);
+    }
+
+    public void SetMoveInput(Vector2 input)
+    {
+        moveInput = new Vector3(input.x, 0f, input.y);
+    }
+}
diff --git a/Assets/Scripts/Player/PlayerNetworkSync.cs b/Assets/Scripts/Player/PlayerNetworkSync.cs
new file mode 100644
index 0000000..64dced9
--- /dev/null
+++ b/Assets/Scripts/Player/PlayerNetworkSync.cs
@@ -0,0 +1,61 @@
+using UnityEngine;
+using Photon.Pun;
+
+public class PlayerNetworkSync : MonoBehaviourPunCallbacks, IPunObservable
+{
+    [SerializeField] private float networkSmoothTime = 0.1f;
+    [SerializeField] private float networkPositionThreshold = 0.5f;
+
+    private Vector3 networkPosition;
+    private Quaternion networkRotation;
+    private Vector3 networkVelocity;
+    private Rigidbody rb;
+    private PhotonView photonView;
+    private Vector3 velocitySmoothing;
+
+    private void Awake()
+    {
+        rb = GetComponent<Rigidbody>();
+        photonView = GetComponent<PhotonView>();
+        networkPosition = transform.position;
+        networkRotation = transform.rotation;
+    }
+
+    public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
+    {
+        if (stream.IsWriting)
+        {
+            stream.SendNext(rb.position);
+            stream.SendNext(rb.rotation);
+            stream.SendNext(rb.velocity);
+        }
+        else
+        {
+            networkPosition = (Vector3)stream.ReceiveNext();
+            networkRotation = (Quaternion)stream.ReceiveNext();
+            networkVelocity = (Vector3)stream.ReceiveNext();
+
+            float lag = Mathf.Abs((float)(PhotonNetwork.Time - info.SentServerTime));
+            networkPosition += networkVelocity * lag;
+        }
+    }
+
+    private void Update()
+    {
+        if (!photonView.IsMine)
+        {
+            if (Vector3.Distance(rb.position, networkPosition) > networkPositionThreshold)
+            {
+                rb.position = networkPosition;
+                rb.rotation = networkRotation;
+            }
+            else
+            {
+                rb.position = Vector3.SmoothDamp(rb.position, networkPosition, ref velocitySmoothing, networkSmoothTime);
+                rb.rotation = Quaternion.Slerp(rb.rotation, networkRotation, Time.deltaTime / networkSmoothTime);
+            }
+
+            rb.velocity = networkVelocity;
+        }
+    }
+}
diff --git a/Assets/Scripts/UI/MobileJoystick.cs b/Assets/Scripts/UI/MobileJoystick.cs
new file mode 100644
index 0000000..e6b40b5
--- /dev/null
+++ b/Assets/Scripts/UI/MobileJoystick.cs
@@ -0,0 +1,61 @@
+using UnityEngine;
+using UnityEngine.EventSystems;
+
+public class MobileJoystick : MonoBehaviour, IPointerDownHandler, IDragHandler, IPointerUpHandler
+{
+    [SerializeField] private RectTransform joystickBackground;
+    [SerializeField] private RectTransform joystickHandle;
+    [SerializeField] private float dragRadius = 50f;
+    [SerializeField] private PlayerController playerController;
+
+    private Vector2 moveInput;
+    private bool isDragging = false;
+
+    private void Awake()
+    {
+        if (playerController == null)
+        {
+            playerController = FindObjectOfType<PlayerController>();
+        }
+    }
+
+    public void OnPointerDown(PointerEventData eventData)
+    {
+        isDragging = true;
+        OnDrag(eventData);
+    }
+
+    public void OnDrag(PointerEventData eventData)
+    {
+        if (!isDragging) return;
+
+        Vector2 position;
+        RectTransformUtility.ScreenPointToLocalPoint(joystickBackground, eventData.position, out position);
+
+        position = Vector2.ClampMagnitude(position, dragRadius);
+        joystickHandle.anchoredPosition = position;
+        moveInput = position / dragRadius;
+
+        if (playerController != null)
+        {
+            playerController.SetMoveInput(moveInput);
+        }
+    }
+
+    public void OnPointerUp(PointerEventData eventData)
+    {
+        isDragging = false;
+        joystickHandle.anchoredPosition = Vector2.zero;
+        moveInput = Vector2.zero;
+
+        if (playerController != null)
+        {
+            playerController.SetMoveInput(Vector2.zero);
+        }
+    }
+
+    public void SetPlayerController(PlayerController controller)
+    {
+        playerController = controller;
+    }
+}
-- 
2.34.1

